@import "tailwindcss" prefix(ui);
@plugin "ui";
@theme {
}
/*
notes::
i've already built my own utility first framework the benefit of using tailwind is using their foundation with my philosphy
i built utility first to rapidly prototype and iterate through design ideas
development process¬


objectives¬
- Rapid Prototyping
- Beautiful by Default

*/

/*
Tailwind
Directives &
Functions

Tailwind CSS v4.0 is a full-featured CSS build tool designed for a specific workflow, and is not designed to be used with CSS preprocessors like Sass, Less, or Stylus.
Think of Tailwind CSS itself as your preprocessor — you shouldn't use Tailwind with Sass for the same reason you wouldn't use Sass with Stylus.
Since Tailwind is designed for modern browsers, you actually don't need a preprocessor for things like nesting or variables, and Tailwind itself will do things like bundle your imports and add vendor prefixes.
*/

/*
@import              :: inline import CSS files, including Tailwind itself.
@theme               :: define your project's custom design tokens.
@source              :: explicitly specify source files sans automatic content detection.
@utility             :: add custom utilities to your project that work with variants.
@variant             :: apply a Tailwind variant to styles in your CSS.
@custom-variant      :: add a custom variant in your project.
@apply               :: inline any existing utility classes into your own custom CSS.
@reference           :: import your main stylesheet for reference without actually including the styles.

--alpha()            :: function to adjust the opacity of a color.
--spacing()          :: function to generate a spacing value based on your theme.
*/

/*fs*/

/*@*/

/*
@charset	         :: Specifies the character encoding used in the style sheet
@container	         :: Define styles for elements in container, depending on the container's size or style
@counter-style       :: Lets you define your own counter styles
@font-face	         :: Specifies a custom font with which to display text
@font-palette-values ::	Allows you to customize the default values of a font-palette
@import	             :: Allows you to import a style sheet into another style sheet
@keyframes	         :: Controls the steps in an animation by defining styles for points along the animation sequence
@layer	             :: Used to control how the CSS cascade layers evaluates the order of styles
@media	             :: Applies parts of a style sheet based on the result of one or more media queries
@namespace	         :: Defines an XML namespace to be used in the style sheet
@page	             :: Customizes the dimension, orientation, and margins of printed pages
@property	         :: Allows you to define custom CSS properties directly in the stylesheet without having to run any JavaScript. This at-rule has data type checking and constraining, sets default values, and defines whether the property can inherit values or not
@scope	             :: Allows you to select elements in specific DOM subtrees and target elements precisely without writing overly-specific selectors
@starting-style	     :: Defines an element's starting styles before the element gets its first style update
@supports	         :: Used to test whether a browser supports a CSS feature
*/

/*
CSS Simple Selectors
element	             :: p	Selects all <p> elements
#id	                 :: #firstname	Selects the element with id="firstname"
*	                 :: *	Selects all elements
.class	             :: .intro Selects all elements with class="intro"
                     :: p.intro Selects all <p> elements with class="intro"

CSS Attribute Selectors
[attribute]	[lang]	 :: Selects all elements with a lang attribute
[attribute=value]	 :: [lang="it"]	Selects all elements with lang="it"
[attribute~=value]	 :: [title~="flower"]	Selects all elements with a title attribute containing the word "flower"
[attribute|=value]	 :: [lang|="en"]	Selects all elements with a lang attribute value equal to "en" or starting with "en-"
[attribute^=value]	 :: [href^="https"]	Selects all elements with a href attribute value that begins with "https"
[attribute$=value]	 :: [href$=".pdf"]	Selects all elements with a href attribute value ends with ".pdf"
[attribute*=value]	 :: [href*="w3schools"]	Selects all elements with a href attribute value containing the substring "w3schools"

CSS Nesting Selector
&	                 :: &	Applies styles for an element within the context of another element



/*
>	                 :: Child combinator div > p	Selects every <p> element that are direct children of a <div> element
(single space)       :: Descendant combinator div p	Selects all <p> elements inside <div> elements
|                    :: Namespace separator ns | h2	Selects all <h2> elements in namespace ns
+                    :: Next-sibling combinator div + p	Selects the first <p> element that is placed immediately after <div> elements
,                    :: Selector list div, p	Selects all <div> elements and all <p> elements
~                    :: Subsequent-sibling combinator p ~ ul	Selects all <ul> elements that are preceded by a <p> element




:active	a:active	 :: Selects the active link
:any-link	         :: a:anylink
area:anylink	     :: Selects any <a> or <area> element with an href attribute
:auto-fill	         :: input:autofill	Selects any <input> element with its value autofilled by the browser
:checked	         :: input:checked
option:checked       :: Matches any <input> or <option> element that is checked
:default	         :: input:default
                     :: button:default
                     :: option:default	Selects form elements that are default in a group of related elements
:defined	:defined	Selects any element that has been defined (standard or custom elements)
:dir()	:dir(ltr)
:dir(rtl)	Selects any element with the specified text direction
:disabled	:disabled
input:disabled
option:disabled	Selects any element that is disabled. Most used for form elements
:empty	div:empty	Selects any element that has no children (including text nodes)
:enabled	:enabled
input:enabled	Selects any element that is enabled. Most used for form elements
:first	@page :first	Represents the first page of a printed document (used with the @page rule)
:first-child	p:first-child
li:first-child	Selects the element that is the first child of its parent (among a group of sibling elements)
:first-of-type	p:first-of-type
li:first-of-type	Selects the first element of its type among a group of sibling elements
:focus	input:focus
select:focus	Selects the element that gets focus. Most used for form elements
:focus-visible	button:focus-visible	Selects the element that gets focus (used to apply focus styles only when the keyboard is used to focus something, not the mouse)
:focus-within	form:focus-within
label:focus-within	Matches an element if the element or any of its descendants gets focus
:fullscreen	:fullscreen	Selects any element that is currently in full-screen mode
:has()	h2:has(+p)	Selects h2 elements that are immediately followed by a p element, and applies the style to h2
:hover	a:hover
p:hover	Selects element on mouse over
:in-range	input:in-range	Select any <input> element with a value within the specified range limit
:indeterminate	input:indeterminate	Selects any form element that is in an indeterminate state
:invalid	input:invalid
fieldset:invalid	Selects invalid form elements
:is()	:is(ul, ol)	Selects all <ul> and <ol>elements
:lang()	p:lang(it)	Selects any <p> element with a lang attribute equal to "it" (Italian)
:last-child	li:last-child	Selects any <li> element that is the last child of its parent
:last-of-type	p:last-of-type	Selects any <p> element that is the last <p> element of its parent
:left	@page :left	Represents all left-hand pages of a printed document (used with the @page rule)
:link	a:link	Selects any unvisited link
:modal	:modal	Selects the element that is in a modal state
:not()	:not(p)	Selects any element that is not a <p> element
:nth-child()	p:nth-child(2)	Selects any <p> element that is the second child of its parent
:nth-last-child()	p:nth-last-child(2)	Selects any <p> element that is the second child of its parent, counting from the end
:nth-last-of-type()	p:nth-last-of-type(2)	Selects any <p> element that is the second <p> element of its parent, counting from the end
:nth-of-type()	p:nth-of-type(2)	Selects any <p> element that is the second <p> element of its parent
:only-child	p:only-child	Selects any <p> element that is the only child of its parent
:only-of-type	p:only-of-type	Selects any <p> element that is the only <p> element of its parent
:optional	input:optional
select:optional
textarea:optional	Selects any <input>, <select>, or <textarea> elements without a "required" attribute
:out-of-range	input:out-of-range	Selects any <input> element with a value outside the specified range limit
:placeholder-shown	input:placeholder-shown
textarea:placeholder-shown	Selects any <input> or <textarea> element that is currently displaying placeholder text
:popover-open	:popover-open	Selects any element that is in a showing popover state
:read-only	input:read-only	Selects input elements with the "readonly" attribute specified
:read-write	input:read-write	Selects editable input elements
:required	input:required	Selects input elements with the "required" attribute specified
:right	@page :right	Represents all right-hand pages of a printed document (used with the @page rule)
:root	:root	Selects the document's root element
:scope	:scope	Selects elements that are a reference point, or scope, for selectors to match against
:state()	:state()	Selects custom elements that have the specified custom state
:target	:target	Selects the current active target element
:user-invalid	:user-invalid	Selects any form element with an invalid value (after the user have interacted with it)
:user-valid	:user-valid	Selects any form element with a valid value (after the user have interacted with it)
:valid	input:valid	Selects all input elements with a valid value
:visited	a:visited
area:visited	Selects all visited links
:where()	:where(ol, ul)	Selects all <ul> and <ol>elements





::after	p::after
div::after	Inserts something after the content of the specified element
::backdrop	dialog::backdrop	Styles the viewbox behind a dialog box or popover element
::before	p::before
div::before	Inserts something before the content of the specified element
::file-selector-button	::file-selector-button	Selects any button of type <input type="file">
::first-letter	p::first-letter	Selects the first letter of every <p> element
::first-line	p::first-line	Selects the first line of every <p> element
::grammar-error	::grammar-error	Styles a text that the browser has flagged as grammatically incorrect
::highlight()	::highlight(custom-name)	Selects a custom highlight
::marker	::marker	Selects the markers of list items
::placeholder	input::placeholder
textarea::placeholder	Styles the placeholder text of <input> or <textarea> elements
::selection	::selection	Styles the user-selected text
::spelling-error	::spelling-error	Styles a text that the browser has flagged as incorrectly spelled
::view-transition	::view-transition	Represents the root of the view transitions overlay, which contains all view transition on the page
::view-transition-group	::view-transition-group	Represents a single view transition snapshot group
::view-transition-image-pair	::view-transition-image-pair	Represents a container for a view transition's "old" and "new" view states - before and after the transition
::view-transition-new	::view-transition-new	Represents the "new" view state of a view transition
::view-transition-old	::view-transition-old	Represents the "old" view state of a view transition



acos()	Returns the inverse cosine of a number between -1 and 1
asin()	Returns the inverse sine of a number between -1 and 1
atan()	Returns the inverse tangent of a number between -∞ and ∞
atan2()	Returns the inverse tangent of two values between -infinity and infinity
attr()	Returns the value of an attribute of the selected element
blur()	Applies a blur effect to an element
brightness()	Adjusts the brightness of an element (brighter or darker)
calc()	Allows you to perform calculations to determine CSS property values
circle()	Defines a circle
clamp()	Sets a value that will adjust responsively between a minimum value and a maximum value depending on the size of the viewport
color()	Allows a color to be specified in a particular, specified color space
color-mix()	Mixes two color values in a given color space, by a given amount
conic-gradient()	Creates a conic gradient
contrast()	Adjusts the contrast of an element
cos()	Returns the cosine of an angle
counter()	Returns the current value of the named counter
counters()	Returns the current values of the named and nested counters
cubic-bezier()	Defines a Cubic Bezier curve
drop-shadow()	Applies a drop shadow effect to an image
ellipse()	Defines an ellipse
exp()	Returns E raised to the power of the specified number x (Ex)
fit-content()	Allows you to size an element based on its content
grayscale()	Converts an image to grayscale
hsl() / hsla()	Defines a color using the Hue-Saturation-Lightness model (HSL); with an optional alpha component
hue-rotate()	Applies a color rotation to an element
hwb()	Defines a color using the Hue-Whiteness-Blackness model (HWB); with an optional alpha component
hypot()	Returns the square root of the sum of squares of its parameters
inset()	Defines a rectangle at the specified inset distances from each side of the reference box
invert()	Inverts the color of an image
lab()	Specifies a color in the CIE L*a*b color space
lch()	Specifies a color in the LCH (Lightness-Chroma-Hue) color space
light-dark()	Enables two color-value settings, and returns the first value if the user has set a light color theme, and the second value if the user has set a dark color theme
linear-gradient()	Creates a linear gradient
log()	Returns the natural logarithm (base E) of a specified number, or the logarithm of the number to the specified base
matrix()	Defines a 2D transformation, using a matrix of six values
matrix3d()	Defines a 3D transformation, using a 4x4 matrix of 16 values
max()	Uses the largest value, from a comma-separated list of values, as the property value
min()	Uses the smallest value, from a comma-separated list of values, as the property value
minmax()	Defines a size range greater than or equal to a min value and less than or equal to a max value (used with CSS grids)
mod()	Returns the remainder left over when a number is divided by another number
oklab()	Specifies a color in the OKLAB color space
oklch()	Specifies a color in the OKLCH color space
opacity()	Applies an opacity effect to an element
perspective()	Defines a perspective view for a 3D transformed element
polygon()	Defines a polygon
pow()	Returns the value of a number (x) raised to the power of another number (y)
radial-gradient()	Creates a radial gradient
ray()	Defines the offset-path line segment that an animated element should follow
rem()	Returns the remainder left over when a number is divided by another number
repeat()	Repeats a set of columns or rows in a grid
repeating-conic-gradient()	Repeats a conic gradient
repeating-linear-gradient()	Repeats a linear gradient
repeating-radial-gradient()	Repeats a radial gradient
rgb() / rgba()	Defines colors using the Red-Green-Blue model (RGB); with an optional alpha component
rotate()	Defines a 2D rotation of an element
rotate3d()	Defines a 3D rotation of an element
rotateX()	Defines a 3D rotation of an element around the x-axis (horizontal)
rotateY()	Defines a 3D rotation of an element around the y-axis (vertical)
rotateZ()	Defines a 3D rotation of an element around the z-axis
round()	Rounds a number according to the specified rounding-strategy
saturate()	Adjusts the saturation (color intensity) of an element
scale()	Defines a 2D scaling of an element
scale3d()	Defines a 3D scaling of an element
scaleX()	Scales an element horizontally (the width)
scaleY()	Scales an element vertically (the height)
sepia()	Converts an image to sepia
sin()	Returns the sine of a number (angle)
skew()	Skews an element along the x- and y-axis
skewX()	Skews an element along the x-axis
skewY()	Skews an element along the y-axis
sqrt()	Returns the square root of a number
steps()	Creates a stepped timing function for animations
tan()	Returns the tangent of a number
translate()	Allows you to re-position an element along the x- and y-axis
translateX()	Allows you to re-position an element along the x-axis
translateY()	Allows you to re-position an element along the y-axis
url()	Allows you to include a file in the stylesheet
var()	Inserts the value of a custom property



cm	centimeters
mm	millimeters
in	inches (1in = 96px = 2.54cm)
px *	pixels (1px = 1/96th of 1in)
pt	points (1pt = 1/72 of 1in)
pc	picas (1pc = 12 pt)


em	Relative to the font-size of the element (2em means 2 times the size of the current font)
ex	Relative to the x-height of the current font (rarely used)
ch	Relative to the width of the "0" (zero)
rem	Relative to font-size of the root element
vw	Relative to 1% of the width of the viewport*
vh	Relative to 1% of the height of the viewport*
vmin	Relative to 1% of viewport's* smaller dimension
vmax	Relative to 1% of viewport's* larger dimension
%	Relative to the parent element
















A
accent-color	Specifies an accent color for user-interface controls
align-content	Specifies the alignment between the lines inside a flexible container when the items do not use all available space
align-items	Specifies the alignment for items inside a flexible container
align-self	Specifies the alignment for selected items inside a flexible container
all	Resets all properties (except unicode-bidi and direction)
animation	A shorthand property for all the animation-* properties
animation-delay	Specifies a delay for the start of an animation
animation-direction	Specifies whether an animation should be played forward, backward or in alternate cycles
animation-duration	Specifies how long an animation should take to complete one cycle
animation-fill-mode	Specifies a style for the element when the animation is not playing (before it starts, after it ends, or both)
animation-iteration-count	Specifies the number of times an animation should be played
animation-name	Specifies a name for the @keyframes animation
animation-play-state	Specifies whether the animation is running or paused
animation-timing-function	Specifies the speed curve of an animation
aspect-ratio	Specifies preferred aspect ratio of an element
B
backdrop-filter	Defines a graphical effect to the area behind an element
backface-visibility	Defines whether or not the back face of an element should be visible when facing the user
background	A shorthand property for all the background-* properties
background-attachment	Sets whether a background image scrolls with the rest of the page, or is fixed
background-blend-mode	Specifies the blending mode of each background layer (color/image)
background-clip	Defines how far the background (color or image) should extend within an element
background-color	Specifies the background color of an element
background-image	Specifies one or more background images for an element
background-origin	Specifies the origin position of a background image
background-position	Specifies the position of a background image
background-position-x	Specifies the position of a background image on x-axis
background-position-y	Specifies the position of a background image on y-axis
background-repeat	Sets if/how a background image will be repeated
background-size	Specifies the size of the background images
block-size	Specifies the size of an element in block direction
border	A shorthand property for border-width, border-style and border-color
border-block	A shorthand property for border-block-width, border-block-style and border-block-color
border-block-color	Sets the color of the borders at start and end in the block direction
border-block-end	A shorthand property for border-block-end-width, border-block-end-style and border-block-end-color
border-block-end-color	Sets the color of the border at the end in the block direction
border-block-end-style	Sets the style of the border at the end in the block direction
border-block-end-width	Sets the width of the border at the end in the block direction
border-block-start	A shorthand property for border-block-start-width, border-block-start-style and border-block-start-color
border-block-start-color	Sets the color of the border at the start in the block direction
border-block-start-style	Sets the style of the border at the start in the block direction
border-block-start-width	Sets the width of the border at the start in the block direction
border-block-style	Sets the style of the borders at start and end in the block direction
border-block-width	Sets the width of the borders at start and end in the block direction
border-bottom	A shorthand property for border-bottom-width, border-bottom-style and border-bottom-color
border-bottom-color	Sets the color of the bottom border
border-bottom-left-radius	Defines the radius of the border of the bottom-left corner
border-bottom-right-radius	Defines the radius of the border of the bottom-right corner
border-bottom-style	Sets the style of the bottom border
border-bottom-width	Sets the width of the bottom border
border-collapse	Sets whether table borders should collapse into a single border or be separated
border-color	Sets the color of the four borders
border-end-end-radius	Sets the radius of the corner between the block-end and the inline-end sides of the element
border-end-start-radius	Sets the radius of the corner between the block-end and the inline-start sides of the element
border-image	A shorthand property for all the border-image-* properties
border-image-outset	Specifies the amount by which the border image area extends beyond the border box
border-image-repeat	Specifies whether the border image should be repeated, rounded or stretched
border-image-slice	Specifies how to slice the border image
border-image-source	Specifies the path to the image to be used as a border
border-image-width	Specifies the width of the border image
border-inline	A shorthand property for border-inline-width, border-inline-style and border-inline-color
border-inline-color	Sets the color of the borders at start and end in the inline direction
border-inline-end	A shorthand property for border-inline-end-width, border-inline-end-style and border-inline-end-color
border-inline-end-color	Sets the color of the border at the end in the inline direction
border-inline-end-style	Sets the style of the border at the end in the inline direction
border-inline-end-width	Sets the width of the border at the end in the inline direction
border-inline-start	A shorthand property for border-inline-start-width, border-inline-start-style and border-inline-start-color
border-inline-start-color	Sets the color of the border at the start in the inline direction
border-inline-start-style	Sets the style of the border at the start in the inline direction
border-inline-start-width	Sets the width of the border at the start in the inline direction
border-inline-style	Sets the style of the borders at start and end in the inline direction
border-inline-width	Sets the width of the borders at start and end in the inline direction
border-left	A shorthand property for all the border-left-* properties
border-left-color	Sets the color of the left border
border-left-style	Sets the style of the left border
border-left-width	Sets the width of the left border
border-radius	A shorthand property for the four border-*-radius properties
border-right	A shorthand property for all the border-right-* properties
border-right-color	Sets the color of the right border
border-right-style	Sets the style of the right border
border-right-width	Sets the width of the right border
border-spacing	Sets the distance between the borders of adjacent cells
border-start-end-radius	Sets the radius of the corner between the block-start and the inline-end sides of the element
border-start-start-radius	Sets the radius of the corner between the block-start and the inline-start sides of the element
border-style	Sets the style of the four borders
border-top	A shorthand property for border-top-width, border-top-style and border-top-color
border-top-color	Sets the color of the top border
border-top-left-radius	Defines the radius of the border of the top-left corner
border-top-right-radius	Defines the radius of the border of the top-right corner
border-top-style	Sets the style of the top border
border-top-width	Sets the width of the top border
border-width	Sets the width of the four borders
bottom	Sets the elements position, from the bottom of its parent element
box-decoration-break	Sets the behavior of the background and border of an element at page-break, or, for in-line elements, at line-break.
box-reflect	The box-reflect property is used to create a reflection of an element.
box-shadow	Attaches one or more shadows to an element
box-sizing	Defines how the width and height of an element are calculated: should they include padding and borders, or not
break-after	Specifies whether or not a page-, column-, or region-break should occur after the specified element
break-before	Specifies whether or not a page-, column-, or region-break should occur before the specified element
break-inside	Specifies whether or not a page-, column-, or region-break should occur inside the specified element
C
caption-side	Specifies the placement of a table caption
caret-color	Specifies the color of the cursor (caret) in inputs, textareas, or any element that is editable
@charset	Specifies the character encoding used in the style sheet
clear	Specifies what should happen with the element that is next to a floating element
clip	Deprecated in favor of clip-path. Clips an absolutely positioned element
clip-path	Clips an element to a basic shape or to an SVG source
color	Sets the color of text
color-scheme	Indicates which operating system color scheme an element should render with
column-count	Specifies the number of columns an element should be divided into
column-fill	Specifies how to fill columns, balanced or not
column-gap	Specifies the gap between the columns
column-rule	A shorthand property for all the column-rule-* properties
column-rule-color	Specifies the color of the rule between columns
column-rule-style	Specifies the style of the rule between columns
column-rule-width	Specifies the width of the rule between columns
column-span	Specifies how many columns an element should span across
column-width	Specifies the column width
columns	A shorthand property for column-width and column-count
@container	Define styles for elements in container, depending on the container's size or style
content	Used with the :before and :after pseudo-elements, to insert generated content
counter-increment	Increases or decreases the value of one or more CSS counters
counter-reset	Creates or resets one or more CSS counters
counter-set	Creates or sets one or more CSS counters
@counter-style	Lets you define your own counter styles
cursor	Specifies the mouse cursor to be displayed when pointing over an element
D
direction	Specifies the text direction/writing direction
display	Specifies how a certain HTML element should be displayed
E
empty-cells	Specifies whether or not to display borders and background on empty cells in a table
F
filter	Defines effects (e.g. blurring or color shifting) on an element before the element is displayed
flex	A shorthand property for the flex-grow, flex-shrink, and the flex-basis properties
flex-basis	Specifies the initial length of a flexible item
flex-direction	Specifies the direction of the flexible items
flex-flow	A shorthand property for the flex-direction and the flex-wrap properties
flex-grow	Specifies how much the item will grow relative to the rest
flex-shrink	Specifies how the item will shrink relative to the rest
flex-wrap	Specifies whether the flexible items should wrap or not
float	Specifies whether an element should float to the left, right, or not at all
font	A shorthand property for the font-style, font-variant, font-weight, font-size/line-height, and the font-family properties
@font-face	Specifies a custom font to use to display text
font-family	Specifies the font family for text
font-feature-settings	Allows control over advanced typographic features in OpenType fonts
font-kerning	Controls the usage of the kerning information (how letters are spaced)
font-language-override	Controls the usage of language-specific glyphs in a typeface
@font-palette-values	Allows you to customize the default values of a font-palette
font-size	Specifies the font size of text
font-size-adjust	Preserves the readability and size of text when fallback font occurs
font-stretch	Selects a normal, condensed, or expanded face from a font family
font-style	Specifies the font style for text
font-synthesis	Controls which missing typefaces (bold or italic) may be synthesized by the browser
font-variant	Specifies whether or not a text should be displayed in a small-caps font
font-variant-alternates	Controls the usage of alternate glyphs associated to alternative names defined in @font-feature-values
font-variant-caps	Controls the usage of alternate glyphs for capital letters
font-variant-east-asian	Controls the usage of alternate glyphs for East Asian scripts (e.g Japanese and Chinese)
font-variant-ligatures	Controls which ligatures and contextual forms are used in textual content of the elements it applies to
font-variant-numeric	Controls the usage of alternate glyphs for numbers, fractions, and ordinal markers
font-variant-position	Controls the usage of alternate glyphs of smaller size positioned as superscript or subscript regarding the baseline of the font
font-weight	Specifies the weight of a font
G
gap	A shorthand property for the row-gap and the column-gap properties
grid	A shorthand property for the grid-template-rows, grid-template-columns, grid-template-areas, grid-auto-rows, grid-auto-columns, and the grid-auto-flow properties
grid-area	Either specifies a name for the grid item, or this property is a shorthand property for the grid-row-start, grid-column-start, grid-row-end, and grid-column-end properties
grid-auto-columns	Specifies a default column size
grid-auto-flow	Specifies how auto-placed items are inserted in the grid
grid-auto-rows	Specifies a default row size
grid-column	A shorthand property for the grid-column-start and the grid-column-end properties
grid-column-end	Specifies where to end the grid item
grid-column-start	Specifies where to start the grid item
grid-row	A shorthand property for the grid-row-start and the grid-row-end properties
grid-row-end	Specifies where to end the grid item
grid-row-start	Specifies where to start the grid item
grid-template	A shorthand property for the grid-template-rows, grid-template-columns and grid-areas properties
grid-template-areas	Specifies how to display columns and rows, using named grid items
grid-template-columns	Specifies the size of the columns, and how many columns in a grid layout
grid-template-rows	Specifies the size of the rows in a grid layout
H
hanging-punctuation	Specifies whether a punctuation character may be placed outside the line box
height	Sets the height of an element
hyphens	Sets how to split words to improve the layout of text
hypenate-character	Sets the character used at the end of line, before a hyphenation break
I
image-rendering	Specifies the type of algorithm to use for image scaling
@import	Allows you to import a style sheet into another style sheet
initial-letter	Specifies the size of the initial-letter and optionally the number of lines the initial letter should sink (down in the text)
inline-size	Specifies the size of an element in the inline direction
inset	Specifies the distance between an element and the parent element
inset-block	Specifies the distance between an element and the parent element in the block direction
inset-block-end	Specifies the distance between the end of an element and the parent element in the block direction
inset-block-start	Specifies the distance between the start of an element and the parent element in the block direction
inset-inline	Specifies the distance between an element and the parent element in the inline direction
inset-inline-end	Specifies the distance between the end of an element and the parent element in the inline direction
inset-inline-start	Specifies the distance between the start of an element and the parent element in the inline direction
isolation	Defines whether an element must create a new stacking content
J
justify-content	Specifies the alignment between the items inside a flexible container when the items do not use all available space
justify-items	Is set on the grid container. Specifies the alignment of grid items in the inline direction
justify-self	Is set on the grid item. Specifies the alignment of the grid item in the inline direction
K
@keyframes	Controls the steps in an animation by defining styles for points along the animation sequence
L
@layer	Controls how the CSS cascade layers evaluates the order of styles
left	Specifies the left position of a positioned element
letter-spacing	Increases or decreases the space between characters in a text
line-break	Specifies how/if to break lines
line-height	Sets the line height
list-style	Sets all the properties for a list in one declaration
list-style-image	Specifies an image as the list-item marker
list-style-position	Specifies the position of the list-item markers (bullet points)
list-style-type	Specifies the type of list-item marker
M
margin	Sets all the margin properties in one declaration
margin-block	Specifies the margin in the block direction
margin-block-end	Specifies the margin at the end in the block direction
margin-block-start	Specifies the margin at the start in the block direction
margin-bottom	Sets the bottom margin of an element
margin-inline	Specifies the margin in the inline direction
margin-inline-end	Specifies the margin at the end in the inline direction
margin-inline-start	Specifies the margin at the start in the inline direction
margin-left	Sets the left margin of an element
margin-right	Sets the right margin of an element
margin-top	Sets the top margin of an element
marker	Points to a marker that will be drawn on all vertices of an element's path (the first, middle, and last)
marker-end	Points to a marker that will be drawn on the last vertex of an element's path
marker-mid	Points to a marker that will be drawn on all the middle vertices of an element's path
marker-start	Points to a marker that will be drawn on the first vertex of an element's path
mask	A shorthand property for mask-image, mask-mode, mask-repeat, mask-position, mask-clip, mask-origin, mask-size and mask-composite
mask-clip	Specifies which area is affected by a mask image
mask-composite	Specifies a compositing operation used on the current mask layer with the mask layers below it
mask-image	Specifies an image to be used as a mask layer for an element
mask-mode	Specifies whether the mask layer image is treated as a luminance mask or as an alpha mask
mask-origin	Specifies the origin position (the mask position area) of a mask layer image
mask-position	Sets the starting position of a mask layer image (relative to the mask position area)
mask-repeat	Specifies how the mask layer image is repeated
mask-size	Specifies the size of a mask layer image
mask-type	Specifies whether an SVG <mask> element is treated as a luminance mask or as an alpha mask
max-height	Sets the maximum height of an element
max-width	Sets the maximum width of an element
@media	Sets the style rules for different media types/devices/sizes
max-block-size	Sets the maximum size of an element in the block direction
max-inline-size	Sets the maximum size of an element in the inline direction
min-block-size	Sets the minimum size of an element in the block direction
min-inline-size	Sets the minimum size of an element in the inline direction
min-height	Sets the minimum height of an element
min-width	Sets the minimum width of an element
mix-blend-mode	Specifies how an element's content should blend with its direct parent background
N
@namespace	Defines an XML namespace to be used in the style sheet
O
object-fit	Specifies how the contents of a replaced element should be fitted to the box established by its used height and width
object-position	Specifies the alignment of the replaced element inside its box
offset	A shorthand property for the offset-anchor, offset-distance, offset-path, offset-position, and the offset-rotate properties
offset-anchor	Specifies a point on an element that is fixed to the path it is animated along
offset-distance	Specifies the position along a path where an animated element is placed
offset-path	Specifies the path an element is animated along
offset-position	Specifies the initial position of an element along a path
offset-rotate	Specifies rotation of an element as it is animated along a path
opacity	Sets the opacity level for an element
order	Sets the order of the flexible item, relative to the rest
orphans	Sets the minimum number of lines that must be left at the bottom of a page or column
outline	A shorthand property for the outline-width, outline-style, and the outline-color properties
outline-color	Sets the color of an outline
outline-offset	Offsets an outline, and draws it beyond the border edge
outline-style	Sets the style of an outline
outline-width	Sets the width of an outline
overflow
Specifies what happens if content overflows an element's box
overflow-anchor
Specifies whether or not content in viewable area in a scrollable contianer should be pushed down when new content is loaded above
overflow-wrap	Specifies whether or not the browser can break lines with long words, if they overflow the container
overflow-x	Specifies whether or not to clip the left/right edges of the content, if it overflows the element's content area
overflow-y	Specifies whether or not to clip the top/bottom edges of the content, if it overflows the element's content area
overscroll-behavior	Specifies whether to have scroll chaining or overscroll affordance in x- and y-directions
overscroll-behavior-block	Specifies whether to have scroll chaining or overscroll affordance in the block direction
overscroll-behavior-inline	Specifies whether to have scroll chaining or overscroll affordance in the inline direction
overscroll-behavior-x	Specifies whether to have scroll chaining or overscroll affordance in x-direction
overscroll-behavior-y	Specifies whether to have scroll chaining or overscroll affordance in y-directions
P
padding	A shorthand property for all the padding-* properties
padding-block	Specifies the padding in the block direction
padding-block-end	Specifies the padding at the end in the block direction
padding-block-start	Specifies the padding at the start in the block direction
padding-bottom	Sets the bottom padding of an element
padding-inline	Specifies the padding in the inline direction
padding-inline-end	Specifies the padding at the end in the inline direction
padding-inline-start	Specifies the padding at the start in the inline direction
padding-left	Sets the left padding of an element
padding-right	Sets the right padding of an element
padding-top	Sets the top padding of an element
@page	Customizes the dimension, orientation, and margins of printed pages
page-break-after	Sets the page-break behavior after an element. Replaced by break-after property
page-break-before	Sets the page-break behavior before an element. Replaced by break-before property
page-break-inside	Sets the page-break behavior inside an element. Replaced by break-inside property
paint-order	Sets the order of how an SVG element or text is painted.
perspective	Gives a 3D-positioned element some perspective
perspective-origin	Defines at which position the user is looking at the 3D-positioned element
place-content	Specifies align-content and justify-content property values for flexbox and grid layouts
place-items	Specifies align-items and justify-items property values for grid layouts
place-self	Specifies align-self and justify-self property values for grid layouts
pointer-events	Defines whether or not an element reacts to pointer events
position	Specifies the type of positioning method used for an element (static, relative, absolute or fixed)
@property	Defines custom CSS properties directly in the stylesheet without having to run any JavaScript
Q
quotes	Sets the type of quotation marks for embedded quotations
R
resize	Defines if (and how) an element is resizable by the user
right	Specifies the right position of a positioned element
rotate	Specifies the rotation of an element
row-gap	Specifies the gap between the grid rows
S
scale	Specifies the size of an element by scaling up or down
@scope	Allows you to select elements in specific DOM subtrees and target elements precisely without writing overly-specific selectors
scroll-behavior	Specifies whether to smoothly animate the scroll position in a scrollable box, instead of a straight jump
scroll-margin	Specifies the margin between the snap position and the container
scroll-margin-block	Specifies the margin between the snap position and the container in the block direction
scroll-margin-block-end	Specifies the end margin between the snap position and the container in the block direction
scroll-margin-block-start	Specifies the start margin between the snap position and the container in the block direction
scroll-margin-bottom	Specifies the margin between the snap position on the bottom side and the container
scroll-margin-inline	Specifies the margin between the snap position and the container in the inline direction
scroll-margin-inline-end	Specifies the end margin between the snap position and the container in the inline direction
scroll-margin-inline-start	Specifies the start margin between the snap position and the container in the inline direction
scroll-margin-left	Specifies the margin between the snap position on the left side and the container
scroll-margin-right	Specifies the margin between the snap position on the right side and the container
scroll-margin-top	Specifies the margin between the snap position on the top side and the container
scroll-padding	Specifies the distance from the container to the snap position on the child elements
scroll-padding-block	Specifies the distance in block direction from the container to the snap position on the child elements
scroll-padding-block-end	Specifies the distance in block direction from the end of the container to the snap position on the child elements
scroll-padding-block-start	Specifies the distance in block direction from the start of the container to the snap position on the child elements
scroll-padding-bottom	Specifies the distance from the bottom of the container to the snap position on the child elements
scroll-padding-inline	Specifies the distance in inline direction from the container to the snap position on the child elements
scroll-padding-inline-end	Specifies the distance in inline direction from the end of the container to the snap position on the child elements
scroll-padding-inline-start	Specifies the distance in inline direction from the start of the container to the snap position on the child elements
scroll-padding-left	Specifies the distance from the left side of the container to the snap position on the child elements
scroll-padding-right	Specifies the distance from the right side of the container to the snap position on the child elements
scroll-padding-top	Specifies the distance from the top of the container to the snap position on the child elements
scroll-snap-align	Specifies where to position elements when the user stops scrolling
scroll-snap-stop	Specifies scroll behaviour after fast swipe on trackpad or touch screen
scroll-snap-type	Specifies how snap behaviour should be when scrolling
scrollbar-color	Specifies the color of the scrollbar of an element
shape-outside	Defines a shape for wrapping for the inline content
@starting-style	Defines an element's starting styles before the element gets its first style update
@supports	Used to test whether a browser supports a CSS feature
T
tab-size	Specifies the width of a tab character
table-layout	Defines the algorithm used to lay out table cells, rows, and columns
text-align	Specifies the horizontal alignment of text
text-align-last	Describes how the last line of a block or a line right before a forced line break is aligned when text-align is "justify"
text-combine-upright	Specifies the combination of multiple characters into the space of a single character
text-decoration	Specifies the decoration added to text
text-decoration-color	Specifies the color of the text-decoration
text-decoration-line	Specifies the type of line in a text-decoration
text-decoration-style	Specifies the style of the line in a text decoration
text-decoration-thickness	Specifies the thickness of the decoration line
text-emphasis	A shorthand property for the text-emphasis-style and text-emphasis-color properties
text-emphasis-color	Specifies the color of emphasis marks
text-emphasis-position	Specifies the position of emphasis marks
text-emphasis-style	Specifies the style of emphasis marks
text-indent	Specifies the indentation of the first line in a text-block
text-justify	Specifies the justification method used when text-align is "justify"
text-orientation	Defines the orientation of characters in a line
text-overflow	Specifies what should happen when text overflows the containing element
text-shadow	Adds shadow to text
text-transform	Controls the capitalization of text
text-underline-offset	Specifies the offset distance of the underline text decoration
text-underline-position	Specifies the position of the underline text decoration
top	Specifies the top position of a positioned element
transform	Applies a 2D or 3D transformation to an element
transform-origin	Allows you to change the position on transformed elements
transform-style	Specifies how nested elements are rendered in 3D space
transition	A shorthand property for all the transition-* properties
transition-delay	Specifies when the transition effect will start
transition-duration	Specifies how many seconds or milliseconds a transition effect takes to complete
transition-property	Specifies the name of the CSS property the transition effect is for
transition-timing-function	Specifies the speed curve of the transition effect
translate	Specifies the position of an element
U
unicode-bidi	Used together with the direction property to set or return whether the text should be overridden to support multiple languages in the same document
user-select	Specifies whether the text of an element can be selected
V
vertical-align	Sets the vertical alignment of an element
visibility	Specifies whether or not an element is visible
W
white-space	Specifies how white-space inside an element is handled
widows	Sets the minimum number of lines that must be left at the top of a page or column
width	Sets the width of an element
word-break	Specifies how words should break when reaching the end of a line
word-spacing	Increases or decreases the space between words in a text
word-wrap	Allows long, unbreakable words to be broken and wrap to the next line
writing-mode	Specifies whether lines of text are laid out horizontally or vertically
Z
z-index	Sets the stack order of a positioned element
zoom	Specifies the zoom factor for an element. An element can be zoomed in and out
*/
